// Servicio para generar SEO con IA (Groq y OpenRouter - solo APIs gratuitas)
import OpenAI from 'openai';

// Cliente principal: Groq (GRATUITO - muy r√°pido)
const groq = new OpenAI({
  apiKey: process.env.GROQ_API_KEY,
  baseURL: 'https://api.groq.com/openai/v1',
});

// Cliente alternativo con OpenRouter (modelos gratuitos)
const openrouter = new OpenAI({
  apiKey: process.env.OPENROUTER_API_KEY || 'sk-or-v1-dummy',
  baseURL: 'https://openrouter.ai/api/v1',
});

export interface SEOData {
  title: string;
  description: string;
  tags: string[];
  hashtags: string[];
  suggestions: string[];
}

export async function generateSEO(title?: string, description?: string, topic?: string): Promise<SEOData> {
  console.log('=== GENERANDO SEO CON IA ===');
  console.log('T√≠tulo:', title || 'No especificado');
  console.log('Descripci√≥n:', description || 'No especificada');
  console.log('Tema:', topic || 'No especificado');
  console.log('Groq API Key presente:', !!process.env.GROQ_API_KEY);
  console.log('OpenRouter API Key presente:', !!process.env.OPENROUTER_API_KEY);

  // Crear contexto para el prompt basado en la informaci√≥n disponible
  let videoContext = '';
  if (title) videoContext += `T√çTULO DEL VIDEO: "${title}"\n`;
  if (description) videoContext += `DESCRIPCI√ìN DEL VIDEO: "${description}"\n`;
  if (topic) videoContext += `TEMA PRINCIPAL: "${topic}"\n`;
  
  // Si no hay informaci√≥n, usar fallback
  if (!title && !description && !topic) {
    console.log('No se proporcion√≥ informaci√≥n, usando fallback gen√©rico');
    return generateFallbackSEO('video gen√©rico');
  }

  const prompt = `
Genera un SEO optimizado para YouTube basado en esta informaci√≥n del video:

${videoContext}

IMPORTANTE: El contenido debe ser 100% coherente con la informaci√≥n proporcionada, NO gen√©rico.

Requisitos:
‚Ä¢ T√≠tulo atractivo con emojis relevantes (m√°ximo 89 caracteres) que mejore el t√≠tulo original o use la informaci√≥n disponible
‚Ä¢ Descripci√≥n natural con emojis que complemente la informaci√≥n del video
‚Ä¢ 5 tags espec√≠ficos relacionados directamente con el contenido
‚Ä¢ 3 hashtags relevantes
‚Ä¢ 3 sugerencias pr√°cticas espec√≠ficas

Usa estilo conversacional argentino (vos, ten√©s, suscribite), s√© espec√≠fico sobre el contenido real del video y SIEMPRE inclu√≠ emojis apropiados en el t√≠tulo y descripci√≥n.

RESPONDE SOLO EN JSON:
{
  "title": "T√≠tulo optimizado con emojis basado en la informaci√≥n del video (m√°ximo 89 caracteres)",
  "description": "Descripci√≥n espec√≠fica con emojis que complemente la informaci√≥n del video, con beneficios concretos, call-to-action natural y enlaces a redes. M√≠nimo 300 caracteres.",
  "tags": ["tag1", "tag2", "tag3", "tag4", "tag5"],
  "hashtags": ["#hashtag1", "#hashtag2", "#hashtag3"],
  "suggestions": ["Sugerencia espec√≠fica 1", "Sugerencia espec√≠fica 2", "Sugerencia espec√≠fica 3"]
}`;

  // A√±adir logs m√°s detallados
  console.log('=== DIAGN√ìSTICO DE APIs ===');
  const status = {
    groq: !!(process.env.GROQ_API_KEY && process.env.GROQ_API_KEY !== 'tu_groq_api_key_aqui'),
    openrouter: !!(process.env.OPENROUTER_API_KEY && process.env.OPENROUTER_API_KEY !== 'sk-or-v1-dummy')
  };
  console.log('Estado APIs:', status);
  console.log('Groq Key:', process.env.GROQ_API_KEY ? `${process.env.GROQ_API_KEY.substring(0, 10)}...` : 'No configurada');
  console.log('OpenRouter Key:', process.env.OPENROUTER_API_KEY ? `${process.env.OPENROUTER_API_KEY.substring(0, 10)}...` : 'No configurada');

  try {
    let response;
    let aiProvider = 'fallback';
    
    // 1. Intentar primero con Groq (GRATUITO y r√°pido)
    if (process.env.GROQ_API_KEY && process.env.GROQ_API_KEY !== 'tu_groq_api_key_aqui') {
      try {
        console.log('üöÄ Intentando con Groq (gratuito)...');
        response = await groq.chat.completions.create({
          model: 'llama-3.1-8b-instant', // Modelo r√°pido y gratuito
          messages: [{ role: 'user', content: prompt }],
          max_tokens: 1000,
          temperature: 0.7,
        });
        
        if (response?.choices?.[0]?.message?.content) {
          aiProvider = 'Groq';
        } else {
          throw new Error('Respuesta vac√≠a de Groq');
        }
      } catch (groqError) {
        console.log('‚ùå Groq fall√≥:', groqError);
        response = null;
      }
    }

    // 2. Si Groq falla, intentar con OpenRouter (GRATUITO)
    if (!response && process.env.OPENROUTER_API_KEY && process.env.OPENROUTER_API_KEY !== 'sk-or-v1-dummy') {
      try {
        console.log('üöÄ Intentando con OpenRouter (gratuito)...');
        response = await openrouter.chat.completions.create({
          model: 'microsoft/phi-3-mini-128k-instruct:free', // Modelo gratuito
          messages: [{ role: 'user', content: prompt }],
          max_tokens: 1000,
          temperature: 0.7,
        });
        
        if (response?.choices?.[0]?.message?.content) {
          aiProvider = 'OpenRouter';
        } else {
          throw new Error('Respuesta vac√≠a de OpenRouter');
        }
      } catch (openrouterError) {
        console.log('‚ùå OpenRouter fall√≥:', openrouterError);
        response = null;
      }
    }

    if (response?.choices?.[0]?.message?.content) {
      console.log(`‚úÖ SEO generado exitosamente con ${aiProvider}`);
      const content = response.choices[0].message.content.trim();
      console.log('Respuesta cruda:', content.substring(0, 200) + '...');
      
      // Intentar parsear JSON
      let jsonMatch = content.match(/\{[\s\S]*\}/);
      if (jsonMatch) {
        try {
          const seoData = JSON.parse(jsonMatch[0]);
          console.log('SEO parseado exitosamente:', seoData);
          
          // Validar estructura
          if (!seoData.title || !seoData.description || !seoData.tags || !seoData.hashtags) {
            throw new Error('Estructura JSON incompleta');
          }

          // Extender descripci√≥n si es muy corta y agregar hashtags
          let finalDescription = seoData.description;
          
          if (finalDescription.length < 300) {
            finalDescription += `

üì£ ¬øTe gust√≥ el video? Suscribite para m√°s contenido como este.
Dej√° tu comentario sobre qu√© parte te pareci√≥ m√°s √∫til üëá

üîó Seguime en redes:
‚Ä¢ Instagram: @tucuenta
‚Ä¢ TikTok: @tucuenta
‚Ä¢ Twitter: @tucuenta

¬°Gracias por ver el video! üôå`;
          }

          // Agregar hashtags al final de la descripci√≥n
          const hashtags = Array.isArray(seoData.hashtags) ? seoData.hashtags.slice(0, 3) : ['#video', '#tutorial', '#contenido'];
          finalDescription += `\n\n${hashtags.join(' ')}`;

          const result = {
            title: seoData.title.substring(0, 60), // Asegurar l√≠mite de t√≠tulo
            description: finalDescription,
            tags: Array.isArray(seoData.tags) ? seoData.tags.slice(0, 5) : ['video', 'tutorial', 'contenido', 'educativo', 'youtube'],
            hashtags: hashtags,
            suggestions: Array.isArray(seoData.suggestions) ? seoData.suggestions.slice(0, 3) : ['Compart√≠ el video si te gust√≥', 'Coment√° qu√© tema quer√©s ver', 'Suscribite para m√°s contenido']
          };

          console.log('=== RESULTADO FINAL ===');
          console.log('T√≠tulo:', result.title);
          console.log('Descripci√≥n length:', result.description.length);
          console.log('Tags:', result.tags);
          console.log('Hashtags:', result.hashtags);
          
          return result;
        } catch (parseError) {
          console.error('Error parseando JSON:', parseError);
        }
      }
    }

    // Si todo falla, usar fallback
    console.log('‚ö†Ô∏è Todas las APIs fallaron, usando fallback');
    return generateFallbackSEO(topic || title || description || 'contenido');
    
  } catch (error) {
    console.error('Error general generando SEO:', error);
    return generateFallbackSEO(topic || title || description || 'contenido');
  }
}

// Funci√≥n de fallback sin timestamps
function generateFallbackSEO(topic: string): SEOData {
  console.log('üîÑ Generando SEO de fallback para:', topic);
  
  const cleanTopic = topic.toLowerCase();
  let titleTemplate: string;
  let specificDescription: string;
  let tags: string[];
  let hashtags: string[];
  
  // Patrones espec√≠ficos seg√∫n el tema sin timestamps
  if (cleanTopic.includes('como') && cleanTopic.includes('funciona')) {
    const subject = topic.replace(/como\s+funciona\s*/i, '').trim();
    titleTemplate = `üß† C√≥mo Funciona ${subject} - Explicaci√≥n Completa y F√°cil`;
    specificDescription = `¬°Hola! üëã En este video te explico de manera simple y clara c√≥mo funciona ${subject}. Vas a entender todos los procesos, mecanismos y principios detr√°s de ${subject} de una forma que cualquiera puede comprender.

üéØ En este video aprend√©s:
‚Ä¢ Los fundamentos b√°sicos de ${subject}
‚Ä¢ C√≥mo funciona paso a paso explicado
‚Ä¢ Los procesos internos m√°s importantes
‚Ä¢ Ejemplos pr√°cticos y aplicaciones reales
‚Ä¢ Conceptos clave que necesit√°s saber

üí° Si te sirvi√≥ la explicaci√≥n, dale LIKE üëç y SUSCRIBITE üîî para m√°s videos educativos. ¬øQu√© otro tema quer√©s que explique?

üîó Seguime en redes para m√°s contenido:
‚Ä¢ Instagram: @tucuenta
‚Ä¢ TikTok: @tucuenta

¬°Gracias por ver! üôå`;
    tags = ['explicacion', 'como-funciona', subject.toLowerCase(), 'educativo', 'tutorial'];
    hashtags = ['#explicacion', '#educativo', '#aprender'];
    
  } else if (cleanTopic.includes('receta') || cleanTopic.includes('cocinar') || cleanTopic.includes('licor')) {
    titleTemplate = `üçΩÔ∏è ${topic} F√ÅCIL y Delicioso - Receta Paso a Paso`;
    specificDescription = `¬°Hola! Te ense√±o a hacer ${topic} de manera s√∫per f√°cil y con ingredientes que ten√©s en casa. Esta receta es perfecta para cualquier ocasi√≥n y te va a quedar deliciosa.

üéØ En este video aprend√©s:
‚Ä¢ Los ingredientes exactos para ${topic}
‚Ä¢ La t√©cnica correcta paso a paso
‚Ä¢ Trucos para que quede perfecto
‚Ä¢ Variaciones y tips de chef
‚Ä¢ C√≥mo presentarlo de manera profesional

üí° Si te gust√≥ la receta, dale LIKE y SUSCRIBITE para m√°s recetas f√°ciles. ¬øQu√© receta quer√©s que haga pr√≥ximamente?

üîó Seguime para m√°s recetas:
‚Ä¢ Instagram: @tucuenta
‚Ä¢ TikTok: @tucuenta

¬°Buen provecho! üçΩÔ∏è`;
    tags = ['receta', 'cocina', 'facil', 'casero', 'comida'];
    hashtags = ['#receta', '#cocina', '#comida'];
    
  } else if (cleanTopic.includes('tecnologia') || cleanTopic.includes('app') || cleanTopic.includes('tech')) {
    titleTemplate = `üíª ${topic} - Tutorial Completo 2025 | Gu√≠a Definitiva`;
    specificDescription = `¬°Hola! üëã Te explico todo sobre ${topic} de manera simple y pr√°ctica. Vas a aprender a usarlo correctamente y sacarle el m√°ximo provecho.

üéØ Al terminar vas a poder:
‚Ä¢ Usar ${topic} como un profesional
‚Ä¢ Aplicar las mejores t√©cnicas
‚Ä¢ Evitar errores t√≠picos de principiantes
‚Ä¢ Optimizar tu experiencia
‚Ä¢ Conocer trucos avanzados

üí° Si te sirvi√≥, dale LIKE üëç y SUSCRIBITE üîî para m√°s tutoriales de tecnolog√≠a. ¬øQu√© tema tech quer√©s que cubra?

üîó Seguime en redes:
‚Ä¢ Instagram: @tucuenta
‚Ä¢ TikTok: @tucuenta

¬°Gracias por ver! üíª`;
    tags = ['tecnologia', 'tutorial', 'tech', 'digital', 'app'];
    hashtags = ['#tech', '#tutorial', '#tecnologia'];
    
  } else {
    // Para cualquier otro tema gen√©rico
    titleTemplate = `üéØ ${topic} - Gu√≠a Completa y Pr√°ctica | Todo lo que Necesit√°s Saber`;
    specificDescription = `¬°Hola! üëã En este video te ense√±o todo sobre ${topic} de manera pr√°ctica y f√°cil de entender. Vas a dominar este tema completamente.

üéØ Vas a aprender:
‚Ä¢ Todo lo esencial sobre ${topic}
‚Ä¢ Las mejores pr√°cticas
‚Ä¢ C√≥mo aplicarlo correctamente
‚Ä¢ Consejos de experto
‚Ä¢ Tips que realmente funcionan

üí° Si te gust√≥ el contenido, dale LIKE y SUSCRIBITE para m√°s videos √∫tiles. ¬øQu√© tema quer√©s que cubra pr√≥ximamente?

üîó Seguime en redes sociales:
‚Ä¢ Instagram: @tucuenta
‚Ä¢ TikTok: @tucuenta

¬°Nos vemos en el pr√≥ximo video! üöÄ`;
    tags = ['tutorial', 'guia', 'consejos', 'tips', topic.toLowerCase()];
    hashtags = ['#tutorial', '#tips', '#guia'];
  }

  return {
    title: titleTemplate.substring(0, 89),
    description: specificDescription + `\n\n${hashtags.join(' ')}`,
    tags: tags,
    hashtags: hashtags,
    suggestions: [
      'Dale LIKE si te sirvi√≥ el video',
      'Suscribite para m√°s contenido como este',
      'Coment√° qu√© tema quer√©s ver pr√≥ximamente'
    ]
  };
}

// Funci√≥n para verificar si hay alguna API configurada
export function isAIConfigured(): boolean {
  return !!(process.env.GROQ_API_KEY && process.env.GROQ_API_KEY !== 'tu_groq_api_key_aqui') ||
         !!(process.env.OPENROUTER_API_KEY && process.env.OPENROUTER_API_KEY !== 'sk-or-v1-dummy');
}

// Funci√≥n para obtener el estado de los proveedores
export function getAIProviderStatus() {
  return {
    groq: !!(process.env.GROQ_API_KEY && process.env.GROQ_API_KEY !== 'tu_groq_api_key_aqui'),
    openrouter: !!(process.env.OPENROUTER_API_KEY && process.env.OPENROUTER_API_KEY !== 'sk-or-v1-dummy'),
    totalConfigured: Number(!!(process.env.GROQ_API_KEY && process.env.GROQ_API_KEY !== 'tu_groq_api_key_aqui')) +
                    Number(!!(process.env.OPENROUTER_API_KEY && process.env.OPENROUTER_API_KEY !== 'sk-or-v1-dummy'))
  };
}
